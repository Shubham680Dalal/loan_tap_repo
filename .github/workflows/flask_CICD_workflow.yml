name: testing the application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  job1:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: pip install -r requirements.txt
    - name: Run Test Cases
      run: pytest run_tests.py

  job2:
    needs: job1
    runs-on: ubuntu-latest

    environment: production

    steps:
    - name: Giving access to the repo
      uses: actions/checkout@v4

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
        aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build,tag and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{steps.login-ecr.outputs.registry}}
        ECR_REPOSITORY: loan_app_image
        IMAGE_TAG: ${{github.sha}}
      run:
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Fill in the new imageID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: loan_app_cluster_from_aws1234Q4321
        image: ${{steps.build-image.outputs.image}}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v2
      with:
        task-definition: ${{steps.task-def.outputs.task-definition}}
        service: loan_app_service
        cluster: loan_app_cluster_from_aws1234Q4321
        wait-for-service-stability: true

      
